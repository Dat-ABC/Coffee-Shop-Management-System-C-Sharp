<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vgAADr4B6kKxwAAADJNJREFUeF7tnc+rVdcVx0UkZNiRiEgQCaU4KBIyKCWDUkJHpcNQQgcdZFA6yrAE
        KXQQgkj/pCAiJYhIyKAUyaA4CKGEUkIJIYTSrqVZ5r3Xfe87P/Zae+29Px/4gCby9J17vp9zn8977oUO
        +YF46/kPAVJwUXxbfO3Zz8CNy+I98UvxLf0PAI3R8d8WvxE/F98QwYFr4kPxv9/5b5EIQEtOjt/OSyLg
        wA3xY9EOsqnPBPSpF0A0pfGbRKAiOv5PxLMH2fxKfEcEiOLY+E0iUIHzxm9qBH4v6gMD4MmS8ZtEYAdL
        x29+Lb4rEgHwYs34TSKwgZviE7F0QI9JBMCLS+La8ZtEYAVbx28SAajNnvGbRGABe8dvEgGoRY3xm0Tg
        CLXGbxIB2EvN8ZtEoID+096a4zc1An8Q9YEEWIPH+E0icAL999NPxdKBqqE+gPpAEgFYiuf4TSIgvC56
        jt8kArCUiPGbU0dAP/HPxNKB8VAf0PdEIgCH0HNDz5GI8ZtTRkA/Yf3ESwfEUyIAh2gxfnOqCLQav0kE
        4Cwtx29OEYHW4zeJABgZxm8OHYEs4zeJAGQavzlkBLKN3yQC85Jx/OZQEcg6fpMIzEfm8ZtDRCD7+E2L
        wEsijI0+xtnHb3YdgV7Gb+oJ8b74sghj0tP4zS4j0Nv4zW/FD0QiMB49jt/sKgK9jt8kAuPR8/jNLiLQ
        +/hNIjAOI4zfTB2BUcZvEoH+GWn8ZsoIjDZ+kwj0y4jjN1NFYNTxmxoBvjvQFyOP30wRgdHHbxKBfphh
        /GbTCMwyfpMI5Gem8ZtNIjDb+E0ikJcZx2+GRmDW8ZtEIB8zj98MicDs4zeJQB4Y//e6RoDxn5YItMfG
        r7d/Lz1GM+oSAcZflgi0Q4854y9bNQKM/7hEIB7Gf75VIqD37Wf850sE4mD8y90VAe937BlNIuAP41/v
        pggw/m0SAT8Y/3ZXRYDx75MI1Ifx73dRBBh/HYlAPRh/PY9GgPHXlQjsh/HXtxgBxu8jEdgO4/fzVARu
        iIzfTyKwHsbvr0bgpnjhsvhALP0irCMRWA7jj/GxeE18xhWRCPhKBM6H8ceo439FPAUR8JcIHIYX9sRY
        HL9BBPwlAv8P44/xkXhw/IZG4L5Y+gBYRyLwPYw/xkXjN4iAv0SAm3lEuWr8BhHwd+YIMP4YdfzXxU0Q
        AX9njADjj3HX+I2rIhHwdaYIMP4Yq4zfIAL+zhABxh9j1fEbRMBfjcCo70XI+GN8KFYfv0EE/B0xAow/
        RtfxGxqBe2LpD4B1HCkCjD/GkPEbRMDfESLA+GMMHb9BBPztOQKMP8Ym4zeIgL89RoDxx9h0/Ia+ppgI
        +NpTBBh/jDp+vZlPCoiAvz1E4JLI+P1NNX6DCPibOQKMP8aPxHTjNzQCH4qlPzjWMWMEGH+MqcdvEAF/
        M0WA8cfYxfgNIuBvhgjo+G+LjN/XrsZvEAF/W0aAK3+MXY7fIAL+togA44+x6/EbRMBfi4B+D94bnvbH
        OMT4DSLgb0QEGH+MQ43fIAL+agTuiB4RYPwxDjl+Q+9MSgR89YgA449x6PEbRMDfml8O8Bd+MU4xfoMI
        +FvjmQBX/hinGr9BBPy1COiQ18L4Y5xy/AYR8HdLBC6KjN/fqcdvEAF/10SA8cfI+E9ABPxdEgHGHyPj
        L0AE/D0WAcYfo47/VREKEAF/NQJ3xZMRYPwxMv4FEAF/Tz4TYPwxMv4VEAF/LQJ/FBm/r4x/A0TAX40A
        4/eV8e+ACGDPMv4KEAHsUcZfESKAPcn4HSAC2IOM3xEigJll/AEQAcwo4w+ECGAmGX8DiABmkPE3hAhg
        Sxl/AogAtpDxJ4IIYKSMPyFEACPU8XMzj6QQAfSU8XcAEUAPGX9HEAGsKePvECKANWT8HUMEcI+MfwB4
        V2LcIuMfCCKAa2T8A0IEcImMf2CIAB6T8U8AEcCSjH8iiACelPFPCBFAlfFPDBGYW8YPzyJwTyydIDiu
        jB9eQATm8qHI+OEURGAOGT8chAiMrY7/ughwkKsiERhPxg+LIQJjyfhhNRqB+2LphMJ+ZPywGSLQt4wf
        dkME+vSRyPihCkSgLxk/VIcI9CHjBzeIQG4ZP7hzRSQC+WT8EAYRyKWOX+8ADRAGEcgh44dmaAQeiKUT
        E/1l/NAcItDGxyLjhxQQgVgZP6RDI/BELJ2wWM+nIq/nh1RcFG+L34ilkxbr+a14R7wkAjSH8cdLBCAF
        jL+dGoG7IhGAJjD+9vJMAJrA+PNIBCAUxp9PIgAh6AnG+HNKBMAVxp9fi8BLIkA1GH8/EgGoio7/PZHx
        96NG4AORCMAuuPL3K88EYBeMv3+JAGyC8Y8jXw7AKhj/eFoEXhYBDsJf+I0rEYCjMP7xJQJQhKf980gE
        4BRc+eeTCMAzGP+8EoHJYfxIBCZFvyfM+FElApPB+PGsRGASGD8ekggMDuPH8yQCg8L4calEYDAYP66V
        CAwC48etEoHOYfy4VyLQKYwfa6kReF8kAp3A+LG2RKATGD96SQSSw/jRWyKQFMaPURKBZDB+jJYIJMHG
        /7VYeqAQvSQCjdEDz/ixpUSgEYwfs0gEgmH8mE0iEATjx6wSAWcYP2aXCDjB+LEXiUBlGD/2JhGoBOPH
        XiUCO2H82LtEYCOMP8b/iHqSlv4f1pEIrITxx6ivnfiz+CeRY+0rEVgI449Rj6++G7K+PdpF8V3xK7H0
        a7GOROAceGFPjHp8dfA6/JO8IxIBX4nAARh/jDb+QxABf4nAGRh/jDrs34lnr/xn+Y34pVj6GFhHIvAd
        3MwjRh20Xt2X8pb4L7H0sbCO00eA8ceo4/+1uJZfiv8USx8T6zhtBBh/jDrgX4lbeVP8h1j62FjH6SLA
        +GPU8etVfC8/F4mAr9NEgPHHWGv8hkbgc7H0e2Edh48A44/xC7Hm+I2fiZ+Jpd8T66gRGPK9CBl/jHqV
        1qu1Fz8Vn4ql3xvrOFwEGH+M3uM3fiISAV+HiQDjjzFq/AYR8Lf7CDD+GKPHbxABf7uNAOOPUQf4htiK
        18UnYunPhnXUCHT13QF9iSnj91fHr1fh1twSiYCv3TwTYPwxZhm/QQT8TR8Bxh9jtvEbRMDftBFg/DH+
        XdTvxWeFCPibLgKMP8bs4zeIgL9pIsD4Y/xUzPi0/xAagb+Kpc8F69g8Aow/Rr2avib2xo/ET8TS54R1
        bBYBxh/j30S9mvbKTZEI+GoR0H97E4KOX28pzfh97X38BhHwNywCjD9GHcyPxVHQLwc+EkufK9ZRI3BH
        dIsA449Rx69XzdG4IRIBX90iwPhjHHX8BhHwt/qXA4w/xo/FkcdvEAF/qz0TYPwxzjJ+gwj4uzsC+g4y
        jN/f2cZvEAF/LQJ6IV8F449x1vEbRMDf1RFg/DE+Fmcev6ER+ItYOkZYx8URYPwx6lXvhyI857r4oVg6
        VljHcyPA+GPU8b8qwmleEYmArwcjwPhjZPzHIQL+agTuii8iwPhjZPzLIAL+nnom8LbI+H1l/OsgAv5q
        BH4rPnutOW/86Cfj3wYR8FXfQPbFHab03vJEoL6Mfx9EwEcd/y/EUxCBujL+OhCBuhbHbxCBOjL+uhCB
        Oh4dv0EE9sn4fSAC+1w0foMIbJPx+0IEtrlq/AYRWCfjj4EIrHPT+A0isEzGHwsRWOau8RtE4LiMvw1E
        4LhVxm8QgbKMvy1EoOwXYrXxG0TgtIw/B0TgtDr+N0UXiMBzdfx6IwvIARF4rsuV/yyzR4Dx52T2CISM
        35g1Aow/N7NGIHT8xmwRYPx9MFsEmozfmCUCjL8vZolA0/Ebo0eA8ffJ6BFIMX5j1Agw/r4ZNQKpxm+M
        FgHGPwbXxJEikHL8xigRYPxjMUoEUo/f6D0CjH9Meo9AF+M3eo0A4x+bXiPQ1fiN3iLA+Oegtwh0OX6j
        lwgw/rnoJQJdj9/IHgHGPyfZIzDE+I2sEWD8c6MRuCeWzo2WDjV+I1sEHoqMH7JFYMjxG1kiwPjhJFki
        MPT4jdYRYPxQonUEphi/0SoCOv7rIkCJq2KLCEw1fiM6AowflhAdgSnHb0RFgPHDGqIiMPX4De8IMH7Y
        gkbgvlg6p2rI+E/gFQHGD3vwigDjL1A7Ao9Exg97qR0BHb/bfft7p1YEGD/UpFYEqr5d16jsjQDjBw/2
        RoDxr2BrBBg/eHJF3BIBxr+BtRFg/BDB2ggw/h0sjYCOX+8ACxDB0ggw/gqcFwHGDy3QCDwQS+ekyvgr
        cigCj0XGD604FAHG78DZCDB+yMDZCDB+RywCjB8yYRFg/AHcFPW12wCZuCzeev7DXrhw4X98eRFJgNaR
        fwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="picMinimiezed.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vgAADr4B6kKxwAAAA/VJREFUeF7t3TGolWUcx/GDhEiEiDhFgzg0hoQ0OIiINEREQ4g0iIhEiISIiES0
        RmM0NTaHNESjNDlJSEiIU0OIg0RDg4hI/f4vdXjVx1tevHHO83w+8L3De97zXi/e53/vOed9z10AAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALD2tqVds15Oe2e9mvY/1sF0+CkdTe9sovfTiS3q
        VPpoRbuQPu2k+lpaX+NWdzadTK3/+406llrfi9XbqfX9fSi9nh5fE/tSrZc96Z+19L/bmd5Ln6Sv0rfp
        SrqWbqZf0m/pj/SnpC3vfvo91dq7ka6my+mLVEPruQyKWvgfp1rcrX+EpNWshsPnadODoH4tuZ1aB5e0
        HtUaPpKeST3+eZBaB5S0XtVavpj+k3rS7GFqHUjSelZr+nTa0BvpXmodQNJ6V08c1qsNTdvTz6l1R0l9
        dCvtSE+ox/2tO0jqq3o5/xEvpruptbOkvqrzdXanpQ9Sa0dJfVZnVy7VWX2tnST1WZ3Fu1RnDbV2ktRn
        9YpAPfE/XWTQ2kFS39WFRtMVR60bJfXddE5AnfPfulFS39XlydOH1o2S+q7eu2BxfLZB0jjVy//TFGjd
        KKnv6uzf6W2PWjdK6rvplGDXAEhjVu+3aABIg2YASANnAEgDZwBIAzcNgHOzDZLGaRoA9aF1o6S+MwCk
        gTMApIEzAKSBMwCkgTMApIEzAKSBMwCkgTMApIEzAKSBMwCkgTMApIGbBsDF2QZJ4zQNAJcDS2NmAEgD
        ZwBIA2cASANnAEgDZwBIAzcNgNOzDZLG6XzytwGlQavf/v15cGnQpj8P/uZsg6RxOpYWB2cbJI3TW2mx
        d7ZB0jjtT4vt6cHfGySN0+40uZFaO0jqs1/T0peptZOkPvs6LdVjgYeptaOk/jqUHnE5tXaU1FdX0hP2
        pXupdQdJfVRP+L+Wmi6l1p0k9dFn6aleSN+l1h0lrXc/pB1pQzvT9dQ6gKT17GZavu7/b3alb1LrQJLW
        q+/TnvRMtqVT6U5qHVTSanc3nU21ljftpXQm/Zjup9YnkrQa1bP8P6VzqR7OP1f1JOEr6UA6kt5NdU3x
        h6k+Yb3FkKStrdZa/VA+mWoNHk21Jmtt1hoFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AGClLBZ/ATJAkwm7+O9vAAAAAElFTkSuQmCC
</value>
  </data>
</root>